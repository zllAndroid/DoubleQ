package com.mding.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.mding.dao.FriendInfo;
import com.mding.dao.GroupChatData;
import com.mding.dao.GroupInfo;
import com.mding.dao.GroupUserRelation;
import com.mding.dao.Msg;
import com.mding.dao.PrivateChatData;
import com.mding.dao.UserRelation;

import com.mding.greendao.FriendInfoDao;
import com.mding.greendao.GroupChatDataDao;
import com.mding.greendao.GroupInfoDao;
import com.mding.greendao.GroupUserRelationDao;
import com.mding.greendao.MsgDao;
import com.mding.greendao.PrivateChatDataDao;
import com.mding.greendao.UserRelationDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig friendInfoDaoConfig;
    private final DaoConfig groupChatDataDaoConfig;
    private final DaoConfig groupInfoDaoConfig;
    private final DaoConfig groupUserRelationDaoConfig;
    private final DaoConfig msgDaoConfig;
    private final DaoConfig privateChatDataDaoConfig;
    private final DaoConfig userRelationDaoConfig;

    private final FriendInfoDao friendInfoDao;
    private final GroupChatDataDao groupChatDataDao;
    private final GroupInfoDao groupInfoDao;
    private final GroupUserRelationDao groupUserRelationDao;
    private final MsgDao msgDao;
    private final PrivateChatDataDao privateChatDataDao;
    private final UserRelationDao userRelationDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        friendInfoDaoConfig = daoConfigMap.get(FriendInfoDao.class).clone();
        friendInfoDaoConfig.initIdentityScope(type);

        groupChatDataDaoConfig = daoConfigMap.get(GroupChatDataDao.class).clone();
        groupChatDataDaoConfig.initIdentityScope(type);

        groupInfoDaoConfig = daoConfigMap.get(GroupInfoDao.class).clone();
        groupInfoDaoConfig.initIdentityScope(type);

        groupUserRelationDaoConfig = daoConfigMap.get(GroupUserRelationDao.class).clone();
        groupUserRelationDaoConfig.initIdentityScope(type);

        msgDaoConfig = daoConfigMap.get(MsgDao.class).clone();
        msgDaoConfig.initIdentityScope(type);

        privateChatDataDaoConfig = daoConfigMap.get(PrivateChatDataDao.class).clone();
        privateChatDataDaoConfig.initIdentityScope(type);

        userRelationDaoConfig = daoConfigMap.get(UserRelationDao.class).clone();
        userRelationDaoConfig.initIdentityScope(type);

        friendInfoDao = new FriendInfoDao(friendInfoDaoConfig, this);
        groupChatDataDao = new GroupChatDataDao(groupChatDataDaoConfig, this);
        groupInfoDao = new GroupInfoDao(groupInfoDaoConfig, this);
        groupUserRelationDao = new GroupUserRelationDao(groupUserRelationDaoConfig, this);
        msgDao = new MsgDao(msgDaoConfig, this);
        privateChatDataDao = new PrivateChatDataDao(privateChatDataDaoConfig, this);
        userRelationDao = new UserRelationDao(userRelationDaoConfig, this);

        registerDao(FriendInfo.class, friendInfoDao);
        registerDao(GroupChatData.class, groupChatDataDao);
        registerDao(GroupInfo.class, groupInfoDao);
        registerDao(GroupUserRelation.class, groupUserRelationDao);
        registerDao(Msg.class, msgDao);
        registerDao(PrivateChatData.class, privateChatDataDao);
        registerDao(UserRelation.class, userRelationDao);
    }
    
    public void clear() {
        friendInfoDaoConfig.clearIdentityScope();
        groupChatDataDaoConfig.clearIdentityScope();
        groupInfoDaoConfig.clearIdentityScope();
        groupUserRelationDaoConfig.clearIdentityScope();
        msgDaoConfig.clearIdentityScope();
        privateChatDataDaoConfig.clearIdentityScope();
        userRelationDaoConfig.clearIdentityScope();
    }

    public FriendInfoDao getFriendInfoDao() {
        return friendInfoDao;
    }

    public GroupChatDataDao getGroupChatDataDao() {
        return groupChatDataDao;
    }

    public GroupInfoDao getGroupInfoDao() {
        return groupInfoDao;
    }

    public GroupUserRelationDao getGroupUserRelationDao() {
        return groupUserRelationDao;
    }

    public MsgDao getMsgDao() {
        return msgDao;
    }

    public PrivateChatDataDao getPrivateChatDataDao() {
        return privateChatDataDao;
    }

    public UserRelationDao getUserRelationDao() {
        return userRelationDao;
    }

}
